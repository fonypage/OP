#include <iostream>
using namespace std;
int proverka(int m)
{
	int b = 0;
	for (int i = 1; i < m; i++)
		if (m % i == 0)
			b += i;
		if (b == m) return 1;
		return 0;
}
int proverka1(int m)
{
	int c = 0;
	for (int j = 1; j <=m; j++)
		if (m % j == 0)c++;
	if (c == 2) return 1;
	return 0;
}
int min(int** a, int const m, int z)
{
	int j1 = 0;
	int min1 = a[z][0];
	for (int j = 1; j < m; j++)
		if (a[z][j] < min1)
		{
			j1 = j;
			min1 = a[z][j];
		}
	return j1;
}
int max(int** a, int const m, int z)
{
	int j1 = 0;
	int max1 = a[z][0];
	for (int j = 1; j < m; j++)
		if (a[z][j] < max1)
		{
			j1 = j;
			max1 = a[z][j];
		}
	return j1;
}

int main()
{
	setlocale(LC_ALL, "rus");
	int a = 1, b = 1, c = 1, x, n;
	float s = 0;
	cout << "Введите  х ";
	cin >> x;
	cout << "Введите кол-во шагов ";
	cin >> n;
	for (int i = 1; i <= n; i++)
	{
		a = a *(-1);
		b = b * pow(3*x + 2, 3);
		c = c * (i + 1);
		s += float(a * b / c);
	}
	cout <<"Сумма = "<< float(s);
	
	
	/*
	setlocale(LC_ALL, "rus");
	int n, max1,flag1=0,flag2=0,c;
	cin >> n;
	int* a = new int[n];
	for (int i = 0; i < n; i++)
	{
		cin >> a[i];
		if (a[i] % 11 == 0)flag1++;
		c = 0;
		for (int j = 1; j <= abs(a[i]); j++)
			if (a[i] % j == 0)c++;
		if (c == 2)flag2++;

	}
	if (flag1 == flag2)
	{
		int max = a[0];
		for (int i = 1; i < n; i++)
			if (a[i] > max)max = a[i];
		cout << endl;
		for (int i = 0; i < n; i++)
		{
			if (a[i] < 0)a[i] = max;
			cout << a[i] << " ";
		}
	}
	delete[]a;
	*/
	/*int s, n = 0, a1, a2;
	cin >> a1 >> a2;
	while (a2)
	{
		if (proverka(a1) + proverka(a2) == 2)n++;
		a1 = a2;
		cin >> a2;
	}
	cout << n;
	*/
	/*	int n, m;
	cin >> n >> m;
	int** a = new int* [n];
	for (int i = 0; i < n; i++)
	{
		a[i] = new int[m];
		for (int j = 0; j < m; j++)
			cin >> a[i][j];
	}
	for (int i = 0; i < n; i++)
	{
		cout << endl;
		for (int j = 0; j < m; j++)
		{
			if (proverka1(i + j) == 1)a[i][j] = 0;
			cout << a[i][j];
		}
	}
	for (int i = 0; i < n; i++)
		delete[] a[i];
	delete[] a;
	return 0;
	*/

}

